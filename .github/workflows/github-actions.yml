name: CI/CD Build APK & Notify üöÄ

on:
  push:
    branches:
      - master
      - test

  # Allows manual trigger from GitHub UI or CLI
  workflow_dispatch:

jobs:
  delete-artifacts:
    runs-on: ubuntu-latest
    steps:
      # Remove old artifacts to free up space before generating new ones
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          expire-in: 0days

  get-info:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch.outputs.value }}
      project: ${{ steps.project.outputs.value }}
      author: ${{ steps.author.outputs.value }}
      email: ${{ steps.email.outputs.value }}
      datetime: ${{ steps.datetime.outputs.value }}
      date_url: ${{ steps.date_url.outputs.value }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Branch Name
        id: branch_name
        run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Get Project Name
        id: project_name
        run: echo "project_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Get Commit Author
        id: commit_author
        run: echo "commit_author=$(git log -1 --pretty=%an)" >> $GITHUB_ENV

      - name: Get Commit Author Email
        id: commit_author_email
        run: echo "commit_author_email=$(git log -1 --pretty=%ae)" >> $GITHUB_ENV

      - name: Get Commit Formatted Date
        id: date_time
        run: echo "date_time=$(git log -1 --pretty=%cd --date=format:'%B %d, %Y %I:%M %p')" >> $GITHUB_ENV

      - name: Get Commit Date For Url
        id: date_url
        run: echo "date_url=$(git log -1 --pretty=%cd --date=format:'%Y-%m-%d')" >> $GITHUB_ENV

  build-android-apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: [get-info, delete-artifacts]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.5
          channel: 'stable'

      - name: Clean project and fetch dependencies
        run: flutter clean && flutter pub get

      - name: Build APK
        run: flutter build apk --release --no-tree-shake-icons

  upload-apk:
    runs-on: ubuntu-latest
    needs: [get-info, delete-artifacts, build-android-apk]
    outputs:
      folder_id: ${{ steps.folder_id.outputs.value }}
    steps:
      - uses: actions/checkout@v2

      # Determine the Google Drive folder based on branch
      - id: folder_id
        run: echo "value=${{ secrets[ needs.get-info.outputs.branch == 'master' && 'MASTER_FOLDER_ID' || 'TEST_FOLDER_ID' ] }}" >> $GITHUB_ENV

      # Compress files before uploading
      - run: zip -r archive.zip *

      # Upload APK to Google Drive
      - uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: "${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}"
          filename: "build/app/outputs/flutter-apk/app-release.apk"
          folderId: ${{ steps.folder_id.outputs.value }}
          name: "${{ needs.get-info.outputs.branch }}_apk_${{ needs.get-info.outputs.datetime }}.apk"
          overwrite: "true"
          mimeType: "application/vnd.android.package-archive"

  notify:
    runs-on: ubuntu-latest
    needs: [get-info, delete-artifacts, build-android-apk, upload-apk]
    steps:
      - uses: actions/checkout@v2

      # Send email notification with build details
      - uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          from: ${{ needs.get-info.outputs.email }}
          to: tolbaax@gmail.com
          subject: "CI üëâüèª New APK Build Uploaded"
          convert_markdown: true
          body: |
            **Dear Sir,**
            
            A new APK build has been successfully uploaded to Google Drive.
            
            - **Project:** ${{ needs.get-info.outputs.project }}
            - **Branch:** ${{ needs.get-info.outputs.branch }}
            - **Date:** ${{ needs.get-info.outputs.datetime }}
            
            üìÇ [Download APK](https://drive.google.com/drive/folders/${{ needs.upload-apk.outputs.folder_id }})
            
            Regards,  
            **${{ needs.get-info.outputs.author }}**  
            Flutter Developer, InBox App 
            Email: ${{ needs.get-info.outputs.email }}
